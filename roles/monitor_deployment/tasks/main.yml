---
- name: Monitor OpenShift installation bootstrap process
  ansible.builtin.command:
    cmd: "openshift-install --dir {{ common_openshift_cluster_install_dir }} agent wait-for bootstrap-complete --log-level={{ log_level }}"
  register: bootstrap_output
  when: not common_fips_enabled

- name: Monitor OpenShift installation bootstrap process (FIPS MODE)
  ansible.builtin.command:
    cmd: "openshift-install-fips --dir {{ common_openshift_cluster_install_dir }} agent wait-for bootstrap-complete --log-level={{ log_level }}"
  register: bootstrap_output
  when: common_fips_enabled

- name: Check status of cluster bootstrap
  debug:
    msg: "{{ bootstrap_output.stderr_lines[-1] }}"
  when: bootstrap_output.stderr is search(bootstrap_complete_text)


- name: Monitor node health
  ansible.builtin.shell:
    cmd: "{{ oc_command_node_status}}"
  register: node_status
  retries: 120
  delay: 15
  until: node_status.stdout >= node_count
  when: bootstrap_output.stderr is search(bootstrap_complete_text)

- name: Node Status
  ansible.builtin.debug:
    msg: "Node ready count is: {{node_status.stdout}}"
  when: node_status.stdout >= node_count

- name: Monitor cluster operator status
  ansible.builtin.shell:
    cmd: "{{ item }}"
  register: co_status
  retries: 120
  delay: 15
  until: co_status.stdout == "0"
  when: bootstrap_output.stderr is search(bootstrap_complete_text)
  with_items: "{{ oc_command_co_status }}"

- name: Cluster Operator Status
  ansible.builtin.debug:
    msg: "Cluster operators in appropriate state"
  when: item.stdout == "0"
  with_items: "{{ co_status.results }}"