---
# tasks file for day2_automation
- name: Set fact for {{ common_ip_space }} IPv4 address
  set_fact:
    ipv4_address: "{{ ansible_all_ipv4_addresses | select('match', '^' + common_ip_space + '\\.') | list }}"
  when: ipv4_address is undefined

- name: debug
  ansible.builtin.debug:
    msg: "{{ cluster }}"
  
- name: Generate day2 values file
  ansible.builtin.template:
    src: "day2-values-file.j2"
    dest: "{{ playbook_dir }}/../helm/openshift-gitops-day2/values.yaml"
    mode: '0755'
    owner: git
    group: git
  become: true
  register: day2_values

- name: get remote settings
  ansible.builtin.command:
    cmd: "git remote"
  register: remote_status

- name: check for localhost remote
  ansible.builtin.debug:
    msg: localhost remote found
  when: "{{ remote_status.stdout is search('localhost') }}"

- name: update remote path
  ansible.builtin.command:
    cmd: "git remote add localhost git@/home/git/repos/ocp4-disconnected-config"
  when: "{{ not remote_status.stdout is search('localhost') }}"

- name: commit change
  ansible.builtin.command:
    cmd: "{{ item }}"
  args:
    chdir: "{{ playbook_dir }}/../"
  with_items:
    - pwd
    - git status
    - git add . 
    - git commit -am 'update day2 values accordingly'"
  register: git_output

- name: debug output
  ansible.builtin.debug:
    msg: "{{ git_output.stdout }}"

- name: push change
  ansible.builtin.command:
    cmd: "git push localhost"
  args:
    chdir: "{{ playbook_dir }}/../"

# - name: Generate day2 app config
#   ansible.builtin.template:
#     src: "day2-argo-app.j2"
#     dest: "{{ playbook_dir }}/day2-argo-app.yaml"
#     mode: '0644'
#     owner: "{{ ansible_user_id }}"
#     group: wheel
#   become: true
#   register: day2_config

# - name: Create day2 app in OpenShift
#   ansible.builtin.command:
#     cmd: "oc apply -f {{ playbook_dir }}/day2-argo-app.yaml"
#   when: day2_config.changed

# - name: Cleanup app config
#   ansible.builtin.file:
#     path: "{{ playbook_dir }}/day2-argo-app.yaml"
#     state: absent


# - name: write to file
#   ansible.builtin.file:


