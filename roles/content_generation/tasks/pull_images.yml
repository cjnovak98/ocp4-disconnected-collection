---
- name: Create {{ common_openshift_oc_mirror_dir }}
  ansible.builtin.file:
    path: "{{ item }}"
    mode: '0755'
    state: directory
  with_items:
  - "{{ common_openshift_oc_mirror_dir }}"

- name: generete oc-mirror imagesetconfig
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "{{ common_openshift_oc_mirror_dir }}/{{ item }}"
  with_items:
    - cluster-images.yml
    - operators.yml  

- name: Fix formating of generated imagesetconfig
  ansible.builtin.replace:
    path: "{{ common_openshift_oc_mirror_dir }}/{{ item }}"
    regexp: '^\s*$'
    replace: ""
  with_items: 
    - cluster-images.yml
    - operators.yml

- name: Fix formating of generated imagesetconfig
  ansible.builtin.replace:
    path: "{{ common_openshift_oc_mirror_dir }}/{{ item }}"
    regexp: '[ \t]+$'
    replace: ""
  with_items: 
    - cluster-images.yml
    - operators.yml

- name: remove empty lines with sed
  ansible.builtin.shell: sed -i '/^$/d' {{ common_openshift_oc_mirror_dir }}/{{ item }}
  with_items: 
    - cluster-images.yml
    - operators.yml

- name: fix permisison on oc-mirror to make executable
  ansible.builtin.file:
    path: "{{ common_openshift_client_bin }}/oc-mirror"
    mode: '0755'

- name: Create mirror specific directories
  ansible.builtin.file:
    path: "{{ common_openshift_oc_mirror_dir }}/{{ item }}"
    mode: '0755'
    state: directory
  with_items:
    - cluster-images
    - operators

- name: Run oc-mirror to generate image tars
  ansible.builtin.command: 
    cmd: "{{ common_openshift_client_bin }}/oc-mirror --config {{ common_openshift_oc_mirror_dir }}/{{ item }} \
      file://{{ common_openshift_oc_mirror_dir }}/{{ item.split ('.')[0] }}"
  register: mirror_pull
  retries: 5
  delay: 10
  until: mirror_pull.rc == 0
  when: content_generation_pull_mirror | bool
  with_items: 
    - cluster-images.yml
    - operators.yml

- name: Remove pull oc-mirror-workspace
  ansible.builtin.file:
    path: "{{ common_openshift_oc_mirror_dir }}/{{ item }}/oc-mirror-workspace"
    state: absent
  when: content_generation_pull_mirror | bool
  with_items: 
    - cluster-images
    - operators
