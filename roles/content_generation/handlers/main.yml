---
- name: Download oc tools
  ansible.builtin.get_url:
    url: "{{ common_openshift_download_base_url }}/ocp/{{ common_openshift_release }}/{{ item }}"
    dest: "{{ common_openshift_download_dir }}"
    mode: '0644'
  with_items:
    - openshift-client-linux.tar.gz
    - oc-mirror.tar.gz
    - openshift-install-linux.tar.gz
  register: download_tools

- name: Extract oc tools
  ansible.builtin.unarchive:
    src: "{{ common_openshift_download_dir }}/{{ item }}"
    remote_src: true
    mode: '0755'
    exclude:
      - README.md
    dest: "{{ common_openshift_client_bin }}"
  with_items:
    - openshift-client-linux.tar.gz
    - oc-mirror.tar.gz
    - openshift-install-linux.tar.gz

- name: Remove oc tools tar
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_fileglob:
    - "{{ common_openshift_download_dir }}/*tar.gz"

- name: Download trident
  ansible.builtin.get_url:
    url: "https://github.com/NetApp/trident/releases/download/{{ common_trident_version }}/trident-installer-{{ common_trident_version  | replace('v', '') }}.tar.gz"
    dest: "{{ common_openshift_download_dir }}"
    mode: '0755'
  register: download_tridant

- name: Extract trident binary
  ansible.builtin.unarchive:
    src: "{{ common_openshift_download_dir }}/trident-installer-{{ common_trident_version | replace('v', '') }}.tar.gz"
    remote_src: true
    include:
      - trident-installer/tridentctl
    dest: "{{ common_openshift_client_bin }}"

- name: Move tridentctl to proper location
  ansible.builtin.copy:
    remote_src: true
    src: "{{ common_openshift_client_bin }}/trident-installer/tridentctl"
    dest: "{{ common_openshift_client_bin }}/tridentctl"
    mode: '0755'

- name: Remove trident-installer/tridentctl
  ansible.builtin.file:
    path: "{{ common_openshift_client_bin }}/trident-installer"
    state: absent

- name: Download butane
  ansible.builtin.get_url:
    url: "{{ common_openshift_download_base_url }}/butane/latest/butane"
    dest: "{{ common_openshift_client_bin }}"
    mode: '0755'
  register: download_butane

- name: Download helm
  ansible.builtin.get_url:
    url: "{{ common_openshift_download_base_url }}/helm/latest/helm-linux-amd64"
    dest: "{{ common_openshift_client_bin }}/helm"
    mode: '0755'
  register: download_helm

- name: Pull registry image
  containers.podman.podman_image:
    name: docker.io/library/registry

- name: Save registry image
  containers.podman.podman_save:
    image: docker.io/library/registry
    dest: "{{ common_openshift_oc_mirror_dir }}/registry.tar"

- name: Detect RHCOS image URL
  command: 
    cmd: "{{ common_openshift_client_bin }}/openshift-install coreos print-stream-json"
  register: rhcos_image_info

- name: Parse RHCOS image URL
  set_fact:
    rhcos_image_url: "{{ rhcos_image_info.stdout | from_json | json_query('architectures.x86_64.artifacts.metal.formats.iso.disk.location') }}"

- name: Download RHCOS image
  get_url:
    url: "{{ rhcos_image_url }}"
    dest: "{{ common_openshift_download_dir }}/"
    mode: '0644'

- name: Download required ansible collections
  ansible.builtin.command: 
    cmd: ansible-galaxy collection download --requirements-file ../collections/requirements.yml --download-path {{ common_openshift_download_dir }}/collections

- include_tasks: pull_images.yml
  when: content_generation_pull_mirror | bool
