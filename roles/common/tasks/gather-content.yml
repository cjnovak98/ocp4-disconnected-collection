---
- name: Create cluster directories
  ansible.builtin.file:
    path: "{{ item }}"
    mode: '0755'
    state: directory
  with_items:
    - "{{ common_openshift_client_bin }}"
    - "{{ common_openshift_oc_mirror_dir }}"
    - "{{ common_openshift_download_dir }}"
    - "{{ common_openshift_download_dir }}/collections"

- name: Check if openshift-install is available
  ansible.builtin.shell: "openshift-install version"
  register: install_check
  failed_when: false
  ignore_errors: true
  changed_when: 
    - 'install_check.rc != 0'
    - "'{{ common_openshift_release}}' not in install_check.stdout"
  notify:
    - Download_oc

# Step 1: Check if specified binaries or files are present
- name: Check if binaries or files are present
  ansible.builtin.stat:
    path: "{{ item.path }}"
  register: check_results
  loop: "{{ checks }}"
  loop_control:
    label: "{{ item.name }}"
  failed_when: false
  changed_when: false
  tags: check_files

# Step 2: Notify handlers for missing items
- name: Notify handlers for missing items
  meta: notify
  notify: "{{ item.item.notify }}"
  when: not item.stat.exists
  loop: "{{ check_results.results }}"
  loop_control:
    label: "{{ item.item.name }}"
  tags: notify_missing

- name: Find pre-staged RHCOS image if .cache directory exists
  ansible.builtin.find:
    paths: "{{ ansible_user_dir }}/.cache"
    patterns: "*.iso"
  register: rhcos
  when: cache_dir.stat.exists
  changed_when: rhcos.matched == 0
  failed_when: false
  notify:
    - rhcos_image

- name: Download required ansible collections
  community.general.ansible_galaxy_install:
    type: collection
    dest: "{{ common_openshift_download_dir }}/collections"
    requirements_file: "{{ playbook_dir }}/../collections/requirements.yml"

- name: Force all notified handlers to run at this point, not waiting for normal sync points
  ansible.builtin.meta: flush_handlers

- include_tasks: pull_images.yml
  when: content_generation_pull_mirror | bool
