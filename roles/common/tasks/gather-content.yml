---
- name: Create cluster directories
  ansible.builtin.file:
    path: "{{ item }}"
    mode: '0755'
    state: directory
  with_items:
    - "{{ common_openshift_client_bin }}"
    - "{{ common_openshift_oc_mirror_dir }}"
    - "{{ common_openshift_download_dir }}"
    - "{{ common_openshift_download_dir }}/collections"

- name: Check if openshift-install is available
  ansible.builtin.shell: "openshift-install version"
  register: install_check
  failed_when: false
  ignore_errors: true
  changed_when: 
    - 'install_check.rc != 0'
    - "'{{ common_openshift_release}}' not in install_check.stdout"
  notify:
    - Download_oc

- name: Check if "trident" binary is present
  ansible.builtin.stat:
    path: /usr/bin/tridentctl
  register: trident
  failed_when: false
  changed_when: "not trident.stat.exists"
  notify:
    - Download_trident

- name: Check if butane binary is present
  ansible.builtin.stat:
    path: /usr/bin/butane
  failed_when: false
  register: butane
  changed_when: "not butane.stat.exists"
  notify:
    - Download_butane

- name: Check if helm binary is present
  ansible.builtin.stat:
    path: /usr/bin/helm
  failed_when: false
  register: helm
  changed_when: 'not helm.stat.exists'
  notify:
    - Download_helm

- name: Check for saved registry
  ansible.builtin.stat:
    path:  "{{ common_openshift_oc_mirror_dir }}/registry.tar"
  register: registry
  changed_when: 'not registry.stat.exists'
  failed_when: false
  notify:
    - Registry_image

- name: Check if .cache directory exists
  ansible.builtin.stat:
    path: "{{ ansible_user_dir }}/.cache"
  register: cache_dir
  failed_when: false
  changed_when: 'not cache_dir.stat.exists'
  notify:
    - rhcos_image

- name: Find pre-staged RHCOS image if .cache directory exists
  ansible.builtin.find:
    paths: "{{ ansible_user_dir }}/.cache"
    patterns: "*.iso"
  register: rhcos
  when: cache_dir.stat.exists
  changed_when: rhcos.matched == 0
  failed_when: false
  notify:
    - rhcos_image

- name: Download required ansible collections
  community.general.ansible_galaxy_install:
    type: collection
    dest: "{{ common_openshift_download_dir }}/collections"
    requirements_file: "{{ playbook_dir }}/../collections/requirements.yml"

- name: Force all notified handlers to run at this point, not waiting for normal sync points
  ansible.builtin.meta: flush_handlers

- include_tasks: pull_images.yml
  when: content_generation_pull_mirror | bool
