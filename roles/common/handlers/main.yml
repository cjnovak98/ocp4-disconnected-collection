---
- name: Download oc tools
  ansible.builtin.get_url:
    url: "{{ common_openshift_download_base_url }}/ocp/{{ common_openshift_release }}/{{ item }}"
    dest: "{{ common_openshift_download_dir }}"
    mode: '0644'
  with_items:
    - openshift-client-linux.tar.gz
    - oc-mirror.tar.gz
    - openshift-install-linux.tar.gz
  listen: "Download_bin"

- name: Extract oc tools
  ansible.builtin.unarchive:
    src: "{{ common_openshift_download_dir }}/{{ item }}"
    remote_src: true
    mode: '0755'
    exclude:
      - README.md
    dest: "{{ common_openshift_client_bin }}"
  with_items:
    - openshift-client-linux.tar.gz
    - oc-mirror.tar.gz
    - openshift-install-linux.tar.gz
  listen: "Download_bin"

- name: Remove oc tools tar
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_fileglob:
    - "{{ common_openshift_download_dir }}/*tar.gz"
  listen: "Download_bin"

- name: Download trident tar
  ansible.builtin.get_url:
    url: "https://github.com/NetApp/trident/releases/download/{{ common_trident_version }}/trident-installer-{{ common_trident_version  | replace('v', '') }}.tar.gz"
    dest: "{{ common_openshift_download_dir }}"
    mode: '0755'
  listen: "Download_bin"

- name: Extract trident binary
  ansible.builtin.unarchive:
    src: "{{ common_openshift_download_dir }}/trident-installer-{{ common_trident_version | replace('v', '') }}.tar.gz"
    remote_src: true
    include:
      - trident-installer/tridentctl
    dest: "{{ common_openshift_client_bin }}"
  listen: "Download_bin"

- name: Move tridentctl to proper location
  ansible.builtin.copy:
    remote_src: true
    src: "{{ common_openshift_client_bin }}/trident-installer/tridentctl"
    dest: "{{ common_openshift_client_bin }}/tridentctl"
    mode: '0755'
  listen: "Download_bin"

- name: Remove trident-installer/tridentctl
  ansible.builtin.file:
    path: "{{ common_openshift_client_bin }}/trident-installer"
    state: absent
  listen: "Download_bin"

- name: Download butane binary
  ansible.builtin.get_url:
    url: "{{ common_openshift_download_base_url }}/butane/latest/butane"
    dest: "{{ common_openshift_client_bin }}"
    mode: '0755'
  listen: "Download_bin"

- name: Download helm binary
  ansible.builtin.get_url:
    url: "{{ common_openshift_download_base_url }}/helm/latest/helm-linux-amd64"
    dest: "{{ common_openshift_client_bin }}/helm"
    mode: '0755'
  listen: "Download_bin"

- name: Pull registry image
  containers.podman.podman_image:
    name: docker.io/library/registry
  listen: Registry_image

- name: Save registry image
  containers.podman.podman_save:
    image: docker.io/library/registry
    dest: "{{ common_openshift_oc_mirror_dir }}/registry.tar"
  listen: Registry_image
   
- name: Download RHCOS image
  get_url:
    url: "{{ rhcos_image_url }}"
    dest: "{{ common_openshift_download_dir }}/"
    mode: '0644'
  listen: rhcos_image

- name: Create RHCOS iso prestage directory
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/.cache/agent/image_cache"
    state: directory
  listen: rhcos_image

- name: Prestage RHCOS iso to {{ ansible_user_dir }}/.cache/agent/image_cache
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ ansible_user_dir }}/.cache/agent/image_cache"
  with_fileglob:
    - "{{ common_openshift_download_dir }}/*iso"
  listen: rhcos_image

- name: Move binaries to destination directory
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: /usr/bin/
    mode: '0755'
    remote_src: yes
  become: true
  with_fileglob:
    - "{{ common_openshift_client_bin }}/*"
  listen: Move_binaries
